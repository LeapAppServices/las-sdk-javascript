{"version":3,"sources":["webpack:///webpack/bootstrap 1a2ec4dce4af98059810","webpack:///./lib/ML.js","webpack:///./lib/MLConfig.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./lib/MLObject.js","webpack:///./lib/MLQuery.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACtCA;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;ACFA;;;;AAEA,KAAM,gBAAgB,yBAAtB;AACA,KAAM,gBAAgB,0BAAtB;;AAEA;;KACM,E;;;;;;;;AACF;;;;;;;oCAOkB,K,EAAO,U,EAAY,S,EAAW;AAC5C,gBAAG,KAAH,GAAW,KAAX;AACA,gBAAG,UAAH,GAAgB,UAAhB;AACA,gBAAG,SAAH,GAAe,aAAa,aAA5B;AACH;;AAED;;;;;;uCAGqB;AACjB,gBAAG,SAAH,GAAe,aAAf;AACH;;AAED;;;;;;uCAGqB;AACjB,gBAAG,SAAH,GAAe,aAAf;AACH;;;;;;mBAGU,E;;;;;;;ACnCf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA,yCAAwC,mBAAmB;AAC3D;AACA;;AAEA;AACA;AACA,mCAAkC,oBAAoB;AACtD;AACA;;AAEA;AACA;AACA,yCAAwC,4BAA4B;AACpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,wDAAuD;AACvD,UAAS;AACT;AACA,UAAS;AACT,+EAA8E;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,wCAAuC,0BAA0B;AACjE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,gCAA+B,0BAA0B,eAAe;AACxE;;AAEA;AAC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","file":"ML.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1a2ec4dce4af98059810\n **/","import ML from './MLConfig';\nimport './MLObject';\nimport './MLQuery';\n\nexport default ML;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/ML.js\n **/","import 'whatwg-fetch';\n\nconst SERVER_URL_CN = 'https://api.maxleap.cn/';\nconst SERVER_URL_EN = 'https://api.maxleap.com/';\n\n/** ML 静态对象 */\nclass ML {\n    /**\n     * 初始化 ML\n     * @param {string} appId - 应用 Id\n     * @param {string} restAPIKey - 应用 REST API Key\n     * @param {string} serverURL - API 服务器地址, 默认为中国区\n     * @static\n     */\n    static initialize(appId, restAPIKey, serverURL) {\n        ML.appId = appId;\n        ML.restApiKey = restAPIKey;\n        ML.serverURL = serverURL || SERVER_URL_CN;\n    }\n\n    /**\n     * 使用中国区服务器\n     */\n    static useCNServer() {\n        ML.serverURL = SERVER_URL_CN;\n    }\n\n    /**\n     * 使用美国区服务器\n     */\n    static useENServer() {\n        ML.serverURL = SERVER_URL_EN;\n    }\n}\n\nexport default ML;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/MLConfig.js\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 3\n ** module chunks = 0\n **/","import 'whatwg-fetch';\nimport ML from './MLConfig';\n\n/** MLObject */\nclass MLObject {\n    /**\n     * 根据 props 初始化 MLObject\n     * @param {object} props\n     */\n    constructor(props) {\n        this.attributes = props || {};\n    }\n\n\n    /**\n     * 创建 MLObject 子类\n     * @param {string} className - 子类名\n     * @param {object} protoProps - 实例属性\n     * @param {object} staticProps - 静态属性\n     * @returns {MLObject} {Child} - MLObject 子类\n     */\n    static extend(className, protoProps, staticProps) {\n        //User 是 ML 保留字段\n        if (className === 'User') {\n            className = '_User';\n        }\n\n        class Child extends MLObject {\n            constructor(props) {\n                super(props);\n            }\n        }\n\n        Child.prototype._className = className;\n\n        return Child;\n    }\n\n    set(key, value) {\n        this.attributes[key] = value;\n    }\n\n    get(key) {\n        return this.attributes[key];\n    }\n\n    /**\n     * 存储对象\n     * @param attrs\n     */\n    save(attrs) {\n        for (let key in attrs) {\n            this.set(key, attrs[key]);\n        }\n        return fetch(`${ML.serverURL}2.0/classes/${this._className}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-ML-AppId': ML.appId,\n                'X-ML-APIKey': ML.restApiKey\n            },\n            body: JSON.stringify(this.attributes)\n        }).then(res=>res.json())\n            .then(this._buildResult);\n    }\n\n    _buildResult=(res)=>{\n        this.id = res.objectId;\n        return this;\n    }\n\n    _cleanAttrs=(object)=>{\n        let attrs = ['objectId', 'createdAt', 'updatedAt'];\n        for(let attr of object){\n            delete object[attr];\n        }\n    }\n}\n\nML.Object = MLObject;\n\nexport default ML;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/MLObject.js\n **/","import 'whatwg-fetch';\nimport ML from './MLConfig';\nimport MLObject from './MLObject';\n\nclass MLQuery {\n    constructor(objectClass) {\n        this._where = {};\n        this._limit = -1;\n        this._skip = 0;\n        this._objectClass = objectClass;\n        this._className = objectClass.prototype._className;\n    }\n\n    get(id) {\n        let params = {};\n        params.where = {\n            objectId: id\n        };\n        return _request(params);\n    }\n\n    first() {\n        return this._request({\n            limit: 1\n        }).then(this._buildResult)\n            .then(res=> {\n                return res[0];\n            })\n    }\n\n    find() {\n        let params = this._createParams();\n        return this._request(params)\n            .then(this._buildResult);\n    }\n\n    count() {\n        var params = this._createParams();\n\n        //仅当 limit 为 0 时, 服务器才不会返回实体数据\n        params.limit = 0;\n        //设置 count 为 1, 让服务器返回 count\n        params.count = 1;\n\n        return this._request(params)\n            .then(res=> {\n                return res.count;\n            });\n    }\n\n    limit(n) {\n        this._limit = n;\n        return this;\n    }\n\n    skip(n) {\n        this._skip = n;\n        return this;\n    }\n\n    ascending(key) {\n        this._order = key;\n        return this;\n    }\n\n    descending(key) {\n        this._order = '-' + key;\n        return this;\n    }\n\n    exists(key){\n        if(key === 'objectId'){\n            console.warn('objectId 一定会存在, 不能作为 exists 条件');\n        }\n        this._where[key] = {$exists: true};\n        return this;\n    }\n\n    doesNotExist(key){\n        if(key === 'objectId'){\n            console.warn('objectId 一定会存在, 不能作为 exists 条件');\n        }\n        this._where[key] = {$exists: false};\n        return this;\n    }\n\n    equalTo(key, value){\n        this._where[key] = value;\n        return this;\n    }\n\n    notEqualTo(key, value){\n        this._where[key] = {$ne: value};\n        return this;\n    }\n\n    greaterThan(key, value){\n        this._where[key] = {$gt: value};\n        return this;\n    }\n\n    lessThan(key, value){\n        this._where[key] = {$lt: value};\n        return this;\n    }\n\n    _createParams() {\n        let params = {\n            where: this._where\n        };\n\n        if (this._limit >= 0) {\n            params.limit = this._limit;\n        }\n        if (this._skip > 0) {\n            params.skip = this._skip;\n        }\n        if (this._order !== undefined) {\n            params.order = this._order;\n        }\n        return params;\n    }\n\n    _request = (params)=> {\n        return fetch(`${ML.serverURL}2.0/classes/${this._className}/query`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-ML-AppId': ML.appId,\n                'X-ML-APIKey': ML.restApiKey\n            },\n            body: JSON.stringify(params)\n        }).then(res=>res.json());\n    }\n\n    _buildResult = (res)=> {\n        return res.results.map(item=> {\n            let obj = new this._objectClass(item);\n            obj.id = obj.attributes.objectId;\n            this._cleanAttrs(obj);\n            return obj;\n        })\n    }\n\n    _cleanAttrs = (object)=> {\n        let attrs = ['createdAt', 'updatedAt'];\n        for (let attr of attrs) {\n            delete object.attributes[attr];\n        }\n    }\n}\n\nML.Query = MLQuery;\n\nexport default ML;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/MLQuery.js\n **/"],"sourceRoot":""}